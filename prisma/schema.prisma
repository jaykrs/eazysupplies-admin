// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}
 
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int       @id @default(autoincrement())
  name            String
  email           String    @unique
  password        String
  countryCode     String?   @map("country_code")
  phone           String?
  profileImageId  Int?
  systemReserve   Boolean   @default(false)
  status          Int       @default(0)
  createdById     Int?
  updatedById     Int?
  lastLoginDt DateTime?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  roleId         Int
  role           Role  @relation(fields: [roleId], references: [id])
  orders          Order[]
  wallet          Wallet?
  point           Point?
  otp             Int       @default(0)
  wishlist        String?
  favorite        String?
}

model Role {
  id          Int             @id @default(autoincrement())
  name        String          @unique
  guardName   String          @default("web")
  systemReserve Boolean       @default(false)
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  user        User[]
}


model Order {
  id             Int      @id @default(autoincrement())
  user           User     @relation(fields: [userId], references: [id])
  userId         Int
  totalAmount    Decimal  @default(0.0)
  status         String   @default("pending")
  paymentMethod  String?
  paymentStatus  String   @default("unpaid")
  shippingAddress String?
  billingAddress  String?
  notes           String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Wallet {
  id         Int     @id @default(autoincrement())
  consumer   User    @relation(fields: [consumerId], references: [id])
  consumerId Int     @unique
  balance    Decimal @default(0.0)
}

model Point {
  id         Int    @id @default(autoincrement())
  consumer   User   @relation(fields: [consumerId], references: [id])
  consumerId Int    @unique
  balance    Int    @default(0)
}

model Product {
  id             Int      @id @default(autoincrement())
  name           String?
  description    String
  type           String
  unit           String
  packing        String?
  HsnHac         String?

  weight         Float    @default(0.0)
  quality        Int      @default(0)
  price          Float
  salePrice      Float
  discount       Float?   @default(0.0)
  buyPrice       Float?   @default(0.0)

  isFeatured     Boolean  @default(false)
  isFreeShipping Boolean  @default(false)
  isAvailable    Boolean? @default(false)
  isReturn       Boolean? @default(false)
  approved       Boolean? @default(false)

  url            String?
  sku            String?
  stockCount     Int?
  title          String?
  thumbnailPath  String?
  imagePath      String?
  sizeChart      String?

  maxDt          DateTime?
  expDt          DateTime?

  category       String?
  tag            String?
  brand          String?
  rating         String?
  license        String?  @default("")
}


model Brand {
  id               Int       @id @default(autoincrement())
  name             String
  ImagePath     String?
  BannerPath         String?
  Description      String? 
}

model Category {
  id               Int       @id @default(autoincrement())
  name             String
  ImagePath     String?
  BannerPath         String?
  Description      String? 
}

model Tag {
  id               Int       @id @default(autoincrement())
  name             String
  ImagePath     String?
  BannerPath         String?
  Description      String?
}








